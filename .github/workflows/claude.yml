name: Claude Code Review

on:
  pull_request:
    types: [opened, ready_for_review]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]
  workflow_run:
    workflows: ["tests"]
    types: [completed]

jobs:
  claude-review:
    # Skip draft PRs, run after tests workflow, or on @claude mentions
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request') ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false) ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude'))
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # Direct prompt for automated review when PR is opened or after tests
          direct_prompt: |
            ${{ (github.event_name == 'pull_request' || github.event_name == 'workflow_run') && 
            'Please review this pull request and provide feedback on:
            - Code quality and Laravel/Vue.js best practices
            - Potential bugs or issues
            - Performance considerations (especially for image/video processing)
            - Security concerns (especially SQL injection, XSS, CSRF)
            - Test coverage and quality
            - Type safety (PHP types and TypeScript)
            - Translation system usage
            - Draft-first workflow adherence
            
            For PHP files: Focus on Laravel conventions, service layer patterns, and PHPStan compliance.
            For Vue/TypeScript files: Check Composition API usage, type safety, and component organization.
            For database migrations: Verify indexes and foreign key constraints.
            
            Be constructive and helpful in your feedback.' || '' }}
          
          # Allow running tests and code quality checks
          allowed_tools: "Bash(docker exec laravel.test php artisan test),Bash(docker exec laravel.test ./vendor/bin/phpstan analyse),Bash(npm run lint),Bash(npm run typecheck)"

